
def isRelease = rootProject.ext.isRelease
if(isRelease){
    apply plugin: 'com.android.library'
}else{
    apply plugin: 'com.android.application'
}

def config = rootProject.ext.androidConfig
def androidIds = rootProject.ext.ids
def depence = rootProject.ext.dependence


android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        if(!isRelease){
            applicationId androidIds.personalId
        }

        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions{
            annotationProcessorOptions {
                arguments =[moduleName:project.getName(),packageNameForAPT:packageNameForAPT]
            }
        }
    }


    sourceSets {
        main{
            if(isRelease){
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }else{
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
            java {
                if(isRelease){
                    exclude("**/debug/**")
                }

            }

        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    depence.each{
        k,v -> implementation v
    }
    implementation project(":annotation")
    annotationProcessor project(":complie")
    implementation project(":commonlib")

//    implementation 'androidx.appcompat:appcompat:1.0.2'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}
